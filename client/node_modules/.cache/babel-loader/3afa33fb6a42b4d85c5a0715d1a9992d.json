{"ast":null,"code":"var _jsxFileName = \"D:\\\\course\\\\web programming-ric\\\\midterm_pizza\\\\client\\\\src\\\\components\\\\DiyPizza\\\\DragTarget.js\";\nimport React from 'react';\nimport { DropTarget } from 'react-dnd';\nimport { Image } from 'react-bootstrap';\nimport ItemType from './ItemType';\nconst pizzaCrust = {\n  width: '400px'\n};\n\nconst Crust = ({\n  canDrop,\n  isOver,\n  connectDropTarget\n}) => {\n  const isActive = canDrop && isOver;\n  let opacity = 0;\n\n  if (isActive) {\n    opacity = 0.5;\n  } else if (canDrop) {\n    opacity = 0.1;\n  }\n\n  return React.createElement(Image, {\n    ref: connectDropTarget,\n    src: require(\"../../images/pizza_crust.png\"),\n    style: Object.assign({}, pizzaCrust, {\n      opacity\n    }),\n    rounded: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  });\n};\n\nexport default DropTarget(ItemTypes.Crust, {\n  drop: () => ({\n    name: 'Crust'\n  })\n}, (connect, monitor) => ({\n  connectDropTarget: connect.dropTarget(),\n  isOver: monitor.isOver(),\n  canDrop: monitor.canDrop()\n}))(Crust);","map":{"version":3,"sources":["D:\\course\\web programming-ric\\midterm_pizza\\client\\src\\components\\DiyPizza\\DragTarget.js"],"names":["React","DropTarget","Image","ItemType","pizzaCrust","width","Crust","canDrop","isOver","connectDropTarget","isActive","opacity","require","Object","assign","ItemTypes","drop","name","connect","monitor","dropTarget"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,WAA3B;AACA,SAASC,KAAT,QAAsB,iBAAtB;AACA,OAAOC,QAAP,MAAqB,YAArB;AAEA,MAAMC,UAAU,GAAG;AACfC,EAAAA,KAAK,EAAE;AADQ,CAAnB;;AAIA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,MAAX;AAAmBC,EAAAA;AAAnB,CAAD,KAA4C;AACtD,QAAMC,QAAQ,GAAGH,OAAO,IAAIC,MAA5B;AACA,MAAIG,OAAO,GAAG,CAAd;;AACA,MAAID,QAAJ,EAAc;AACVC,IAAAA,OAAO,GAAG,GAAV;AACH,GAFD,MAEO,IAAIJ,OAAJ,EAAa;AAChBI,IAAAA,OAAO,GAAG,GAAV;AACH;;AACD,SACI,oBAAC,KAAD;AACI,IAAA,GAAG,EAAEF,iBADT;AAEI,IAAA,GAAG,EAAEG,OAAO,CAAC,8BAAD,CAFhB;AAGI,IAAA,KAAK,EAAEC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBV,UAAlB,EAA8B;AAAEO,MAAAA;AAAF,KAA9B,CAHX;AAGuD,IAAA,OAAO,MAH9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAOH,CAfD;;AAiBA,eAAeV,UAAU,CACrBc,SAAS,CAACT,KADW,EAErB;AACEU,EAAAA,IAAI,EAAE,OAAO;AAAEC,IAAAA,IAAI,EAAE;AAAR,GAAP;AADR,CAFqB,EAKrB,CAACC,OAAD,EAAUC,OAAV,MAAuB;AACrBV,EAAAA,iBAAiB,EAAES,OAAO,CAACE,UAAR,EADE;AAErBZ,EAAAA,MAAM,EAAEW,OAAO,CAACX,MAAR,EAFa;AAGrBD,EAAAA,OAAO,EAAEY,OAAO,CAACZ,OAAR;AAHY,CAAvB,CALqB,CAAV,CAUbD,KAVa,CAAf","sourcesContent":["import React from 'react';\r\nimport { DropTarget } from 'react-dnd';\r\nimport { Image } from 'react-bootstrap';\r\nimport ItemType from './ItemType'\r\n\r\nconst pizzaCrust = {\r\n    width: '400px',\r\n}\r\n\r\nconst Crust = ({ canDrop, isOver, connectDropTarget }) => {\r\n    const isActive = canDrop && isOver\r\n    let opacity = 0;\r\n    if (isActive) {\r\n        opacity = 0.5;\r\n    } else if (canDrop) {\r\n        opacity = 0.1;\r\n    }\r\n    return (\r\n        <Image \r\n            ref={connectDropTarget}\r\n            src={require(\"../../images/pizza_crust.png\")}\r\n            style={Object.assign({}, pizzaCrust, { opacity })} rounded \r\n        />\r\n    )\r\n}\r\n\r\nexport default DropTarget(\r\n    ItemTypes.Crust,\r\n    {\r\n      drop: () => ({ name: 'Crust' }),\r\n    },\r\n    (connect, monitor) => ({\r\n      connectDropTarget: connect.dropTarget(),\r\n      isOver: monitor.isOver(),\r\n      canDrop: monitor.canDrop(),\r\n    }),\r\n)(Crust)\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}