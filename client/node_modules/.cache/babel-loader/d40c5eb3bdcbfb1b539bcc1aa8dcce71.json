{"ast":null,"code":"var _jsxFileName = \"D:\\\\course\\\\web programming-ric\\\\midterm_pizza\\\\client\\\\src\\\\components\\\\DiyPizza\\\\DragTarget.js\";\nimport React, { Component } from 'react';\nimport { DropTarget } from 'react-dnd';\nimport { Image } from 'react-bootstrap';\nimport ItemType from './ItemType';\nconst pizzaCrust = {\n  width: '400px'\n};\nconst target = {\n  drop: () => ({\n    name: 'Crust'\n  })\n  /*\r\n  const Crust = ({ canDrop, isOver, connectDropTarget }) => {\r\n      const isActive = canDrop && isOver\r\n      let opacity = 0;\r\n      if (isActive) {\r\n          opacity = 0.5;\r\n      } else if (canDrop) {\r\n          opacity = 0.1;\r\n      }\r\n      return (\r\n          <Image \r\n              ref={connectDropTarget}\r\n              src={require(\"../../images/pizza_crust.png\")}\r\n              style={Object.assign({}, pizzaCrust, { opacity })}\r\n              rounded \r\n          />\r\n      )\r\n  }\r\n  */\n\n};\n\nclass Box extends Component {\n  render() {\n    const connectDropTarget = this.props.connectDropTarget;\n    return connectDropTarget(\n    /* code here */\n    React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"1\"));\n  }\n\n}\n\nexport default DropTarget(ItemType.TOPPING, target, (connect, monitor) => ({\n  connectDropTarget: connect.dropTarget()\n}))(Box);\n/*\r\nisOver: monitor.isOver(),\r\ncanDrop: monitor.canDrop(),\r\n*/","map":{"version":3,"sources":["D:\\course\\web programming-ric\\midterm_pizza\\client\\src\\components\\DiyPizza\\DragTarget.js"],"names":["React","Component","DropTarget","Image","ItemType","pizzaCrust","width","target","drop","name","Box","render","connectDropTarget","props","TOPPING","connect","monitor","dropTarget"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,WAA3B;AACA,SAASC,KAAT,QAAsB,iBAAtB;AACA,OAAOC,QAAP,MAAqB,YAArB;AAEA,MAAMC,UAAU,GAAG;AACfC,EAAAA,KAAK,EAAE;AADQ,CAAnB;AAIA,MAAMC,MAAM,GAAG;AACXC,EAAAA,IAAI,EAAE,OAAO;AAAEC,IAAAA,IAAI,EAAE;AAAR,GAAP;AAEV;;;;;;;;;;;;;;;;;;;;AAHe,CAAf;;AAsBA,MAAMC,GAAN,SAAkBT,SAAlB,CAA4B;AACxBU,EAAAA,MAAM,GAAG;AAAA,UACDC,iBADC,GACqB,KAAKC,KAD1B,CACDD,iBADC;AAET,WAAOA,iBAAiB;AACxB;AACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFoB,CAAxB;AAIC;;AAPuB;;AAU5B,eAAeV,UAAU,CACrBE,QAAQ,CAACU,OADY,EAErBP,MAFqB,EAGrB,CAACQ,OAAD,EAAUC,OAAV,MAAuB;AACrBJ,EAAAA,iBAAiB,EAAEG,OAAO,CAACE,UAAR;AADE,CAAvB,CAHqB,CAAV,CAObP,GAPa,CAAf;AASA","sourcesContent":["import React, { Component } from 'react';\r\nimport { DropTarget } from 'react-dnd';\r\nimport { Image } from 'react-bootstrap';\r\nimport ItemType from './ItemType'\r\n\r\nconst pizzaCrust = {\r\n    width: '400px',\r\n}\r\n\r\nconst target = {\r\n    drop: () => ({ name: 'Crust' }),\r\n}\r\n/*\r\nconst Crust = ({ canDrop, isOver, connectDropTarget }) => {\r\n    const isActive = canDrop && isOver\r\n    let opacity = 0;\r\n    if (isActive) {\r\n        opacity = 0.5;\r\n    } else if (canDrop) {\r\n        opacity = 0.1;\r\n    }\r\n    return (\r\n        <Image \r\n            ref={connectDropTarget}\r\n            src={require(\"../../images/pizza_crust.png\")}\r\n            style={Object.assign({}, pizzaCrust, { opacity })}\r\n            rounded \r\n        />\r\n    )\r\n}\r\n*/\r\nclass Box extends Component {\r\n    render() {\r\n    const { connectDropTarget } = this.props\r\n    return connectDropTarget(\r\n    /* code here */\r\n        <div>1</div>\r\n    )\r\n    }\r\n   }\r\n\r\nexport default DropTarget(\r\n    ItemType.TOPPING,\r\n    target,\r\n    (connect, monitor) => ({\r\n      connectDropTarget: connect.dropTarget(),\r\n      \r\n    }),\r\n)(Box)\r\n\r\n/*\r\nisOver: monitor.isOver(),\r\ncanDrop: monitor.canDrop(),\r\n*/"]},"metadata":{},"sourceType":"module"}