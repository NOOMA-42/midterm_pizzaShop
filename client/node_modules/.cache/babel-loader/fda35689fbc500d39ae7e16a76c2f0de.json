{"ast":null,"code":"var _jsxFileName = \"D:\\\\course\\\\web programming-ric\\\\midterm_pizza\\\\client\\\\src\\\\components\\\\DiyPizza\\\\DragSource.js\";\nimport React from 'react';\nimport { DragSource } from 'react-dnd';\nimport ItemType from './ItemType';\nimport { ListGroup, Image } from 'react-bootstrap';\nconst dragImgStyle = {\n  width: '100px'\n};\n\nconst topping = ({\n  name,\n  isDragging,\n  connectDragSource\n}) => {\n  const opacity = isDragging ? 0.4 : 1;\n  return connectDragSource(React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }));\n};\n\nexport default DragSource(ItemType.TOPPING, {\n  beginDrag: props => ({\n    name: props.key\n  }),\n\n  endDrag(props, monitor) {\n    const item = monitor.getItem();\n    const dropResult = monitor.getDropResult();\n\n    if (dropResult) {\n      alert(\"You dropped \".concat(item.name, \" into \").concat(dropResult.name, \"!\"));\n    }\n  }\n\n}, (connect, monitor) => ({\n  connectDragSource: connect.dragSource(),\n  isDragging: monitor.isDragging()\n}))(topping);","map":{"version":3,"sources":["D:\\course\\web programming-ric\\midterm_pizza\\client\\src\\components\\DiyPizza\\DragSource.js"],"names":["React","DragSource","ItemType","ListGroup","Image","dragImgStyle","width","topping","name","isDragging","connectDragSource","opacity","TOPPING","beginDrag","props","key","endDrag","monitor","item","getItem","dropResult","getDropResult","alert","connect","dragSource"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,WAA3B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,SAAT,EAAoBC,KAApB,QAAiC,iBAAjC;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE;AADU,CAArB;;AAIA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,UAAR;AAAoBC,EAAAA;AAApB,CAAD,KAA6C;AACzD,QAAMC,OAAO,GAAGF,UAAU,GAAG,GAAH,GAAS,CAAnC;AACA,SAAOC,iBAAiB,CACpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADoB,CAAxB;AAKH,CAPD;;AASA,eAAeT,UAAU,CACrBC,QAAQ,CAACU,OADY,EAErB;AACEC,EAAAA,SAAS,EAAEC,KAAK,KAAK;AAAEN,IAAAA,IAAI,EAAEM,KAAK,CAACC;AAAd,GAAL,CADlB;;AAEEC,EAAAA,OAAO,CAACF,KAAD,EAAQG,OAAR,EAAiB;AACtB,UAAMC,IAAI,GAAGD,OAAO,CAACE,OAAR,EAAb;AACA,UAAMC,UAAU,GAAGH,OAAO,CAACI,aAAR,EAAnB;;AACA,QAAID,UAAJ,EAAgB;AACdE,MAAAA,KAAK,uBAAgBJ,IAAI,CAACV,IAArB,mBAAkCY,UAAU,CAACZ,IAA7C,OAAL;AACD;AACF;;AARH,CAFqB,EAYrB,CAACe,OAAD,EAAUN,OAAV,MAAuB;AACrBP,EAAAA,iBAAiB,EAAEa,OAAO,CAACC,UAAR,EADE;AAErBf,EAAAA,UAAU,EAAEQ,OAAO,CAACR,UAAR;AAFS,CAAvB,CAZqB,CAAV,CAgBbF,OAhBa,CAAf","sourcesContent":["import React from 'react';\r\nimport { DragSource } from 'react-dnd';\r\nimport ItemType from './ItemType';\r\nimport { ListGroup, Image } from 'react-bootstrap';\r\n\r\nconst dragImgStyle = {\r\n    width: '100px'\r\n}\r\n\r\nconst topping = ({ name, isDragging, connectDragSource }) => {\r\n    const opacity = isDragging ? 0.4 : 1\r\n    return connectDragSource(\r\n        <div>\r\n\r\n        </div> \r\n    )\r\n}\r\n\r\nexport default DragSource(\r\n    ItemType.TOPPING,\r\n    {\r\n      beginDrag: props => ({ name: props.key }),\r\n      endDrag(props, monitor) {\r\n        const item = monitor.getItem()\r\n        const dropResult = monitor.getDropResult()\r\n        if (dropResult) {\r\n          alert(`You dropped ${item.name} into ${dropResult.name}!`)\r\n        }\r\n      },\r\n    },\r\n    (connect, monitor) => ({\r\n      connectDragSource: connect.dragSource(),\r\n      isDragging: monitor.isDragging(),\r\n    }),\r\n)(topping)"]},"metadata":{},"sourceType":"module"}